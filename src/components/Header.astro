---
import IconClickable from "./IconClickable.astro";
import Nav from "./Nav.astro";
import Logo from "./Logo.astro";
import Socials from "./Socials.astro";
import LineMdMenu from "~icons/line-md/menu";
import LineMdMenuToCloseAltTransition from "~icons/line-md/menu-to-close-alt-transition";
import LineMdCloseToMenuAltTransition from "~icons/line-md/close-to-menu-alt-transition";
---

<script>
  const button = document.querySelector("button[aria-expanded]");
  button?.addEventListener("click", () => {
    const state: Boolean = !(button.getAttribute("aria-expanded") === "true");
    button.setAttribute("aria-expanded", `${state}`);
    if (!state) {
      button.innerHTML = "";
      const temp: HTMLTemplateElement = document.getElementById(
        "burger-open-btn",
      ) as HTMLTemplateElement;
      button.appendChild(temp.content.cloneNode(true));
    } else {
      button.innerHTML = "";
      const temp: HTMLTemplateElement = document.getElementById(
        "burger-close-btn",
      ) as HTMLTemplateElement;
      button.appendChild(temp.content.cloneNode(true));
    }
  });
</script>
<header>
  <Logo zIndex="2" size="4em" />
  <IconClickable size="2.5em" Element="button" aria-expanded="false">
    <LineMdMenu />
  </IconClickable>
  <section>
    <Nav />
    <Socials />
  </section>
  <style>
    header {
      color: var(--white);
      background-color: var(--devshed-blue);
      flex-direction: row;
      display: flex;
      gap: 2em;
      padding: 1em;
      align-items: center;

      button {
        @media (prefers-color-scheme: light) {
          &[aria-expanded="true"] {
            color: var(--fg);
          }
        }

        @media (min-width: 64em) {
          display: none;
        }
      }

      [aria-expanded="true"] + section {
        visibility: visible;
        transform: translateY(0);
      }

      section {
        height: 100%;
        flex-grow: 1;
        position: fixed;
        z-index: 1;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        color: var(--fg);
        background-color: var(--bg);
        display: flex;
        align-items: center;
        flex-direction: column;
        gap: 2.5em;
        visibility: hidden;
        padding: 1em;
        overflow: hidden;
        transform: translateY(100%);
        transition:
          transform 0.6s cubic-bezier(0.68, -0.55, 0.27, 1.55),
          visibility 0.4s linear;

        @media (min-width: 64em) {
          position: initial;
          flex-direction: row;
          visibility: visible;
          padding: 0;
          transform: none;
          gap: 2rem;
          background-color: inherit;
          color: inherit;
        }
      }
    }
  </style>
  <template id="burger-close-btn">
    <LineMdMenuToCloseAltTransition />
  </template>
  <template id="burger-open-btn">
    <LineMdCloseToMenuAltTransition />
  </template>
</header>
